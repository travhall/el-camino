---
import Layout from "@/layouts/Layout.astro";
import Button from "@/components/Button.astro";
import { fetchProduct } from "@/lib/square/client";
import { MoneyUtils } from "@/lib/square/money";
import { cart } from "@/lib/cart";

const { id } = Astro.params;
const product = id ? await fetchProduct(id) : null;

if (!product) {
  return Astro.redirect("/404");
}

const formattedPrice = MoneyUtils.format(MoneyUtils.fromFloat(product.price));
---

<Layout title={product.title}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="lg:grid lg:grid-cols-2 lg:gap-x-8">
      {/* Product Image */}
      <div class="aspect-w-4 aspect-h-3 rounded-lg overflow-hidden bg-gray-100">
        <img
          src={product.image}
          alt={product.title}
          class="w-full h-full object-cover"
          onerror="this.src='/images/placeholder.png'"
        />
      </div>

      {/* Product Details */}
      <div class="mt-10 lg:mt-0">
        <h1 class="text-3xl font-display mb-4">
          {product.title}
        </h1>

        <div class="mt-3">
          <p class="text-2xl font-display">{formattedPrice}</p>
        </div>

        {
          product.description && (
            <div class="mt-6">
              <p class="text-base text-gray-700 dark:text-beeswax-300">
                {product.description}
              </p>
            </div>
          )
        }

        <div class="mt-8">
          <Button
            type="button"
            variant="primary"
            size="lg"
            classes="w-full md:w-auto"
            data-product={JSON.stringify({
              id: product.id,
              catalogObjectId: product.catalogObjectId,
              variationId: product.variationId,
              title: product.title,
              price: product.price,
              image: product.image,
            })}
          >
            Add to Cart
          </Button>
        </div>
      </div>
    </div>
  </div>

  <script>
    import { cart } from "@/lib/cart";

    document.querySelector("[data-product]")?.addEventListener("click", (e) => {
      try {
        const button = e.currentTarget as HTMLButtonElement;
        const productData = button.dataset.product;
        if (!productData) {
          throw new Error("No product data found");
        }

        const product = JSON.parse(productData);
        cart.addItem({
          ...product,
          quantity: 1,
        });

        // Show success message
        const successMessage = document.createElement("div");
        successMessage.className =
          "fixed top-4 right-4 bg-fig-leaf-500 dark:bg-sweet-tea-300 text-beeswax-50 dark:text-fig-leaf-900 px-4 py-2 rounded-lg shadow-lg z-50";
        successMessage.textContent = "Added to cart";
        document.body.appendChild(successMessage);

        setTimeout(() => {
          successMessage.remove();
        }, 2000);
      } catch (error) {
        console.error("Error adding to cart:", error);
      }
    });
  </script>
</Layout>
