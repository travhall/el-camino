---
import { fetchProducts } from "@/lib/square/client"; // Fetch ALL products
import { extractFilterOptions, parseFiltersFromURL, filterProducts as filterProductsWithCache } from "@/lib/square/filterUtils";
import Layout from "@/layouts/Layout.astro";
import ProductGrid from "@/components/ProductGrid.astro";
import ProductFiltersComponent from "@/components/ProductFilters.astro"; // Renamed to avoid conflict
import AppliedFilters from "@/components/AppliedFilters.astro";
import Breadcrumbs from "@/components/Breadcrumbs.astro";
import type { FilterOptions, ProductFilters as ProductFiltersType } from "@/lib/square/types"; // Alias type
import { logger } from "@/lib/utils/logger";

// === PARSE URL PARAMETERS FOR FILTERING ===
const filters = parseFiltersFromURL(Astro.url.searchParams);

logger.log("[Shop/All] ðŸŽ¯ URL Parameters:", {
  searchParams: Astro.url.search,
  parsedFilters: filters,
  hasBrands: filters.brands.length > 0,
  hasAvailability: filters.availability,
});

// Smart cache headers based on filters
const hasFilters = Object.values(filters).some((f) =>
  Array.isArray(f) ? f.length > 0 : f === true
);

logger.log("[Shop/All] ðŸŽ¯ Cache Strategy:", {
  hasFilters,
  filterValues: Object.values(filters),
  filtersBreakdown: filters,
});
