---
import Layout from "../layouts/Layout.astro";

const locationId = import.meta.env.PUBLIC_SQUARE_LOCATION_ID;
const appId = import.meta.env.PUBLIC_SQUARE_APP_ID;
---

<Layout title="Checkout">
  <div class="checkout-page">
    <h1>Checkout</h1>
    <div id="cart-summary"></div>
    <form id="payment-form">
      <div id="card-container"></div>
      <button id="card-button" type="button">Pay</button>
    </form>
  </div>
</Layout>

<script define:vars={{ locationId, appId }}>
  import { getCart } from "../lib/cart";

  // Load the Square Web Payments SDK
  const script = document.createElement("script");
  script.src = "https://sandbox.web.squarecdn.com/v1/square.js";
  document.head.appendChild(script);

  script.onload = async () => {
    if (!window.Square) {
      throw new Error("Square.js failed to load properly");
    }

    const payments = window.Square.payments(appId, locationId);
    let card;

    try {
      card = await payments.card();
      await card.attach("#card-container");
    } catch (e) {
      console.error("Initializing Card failed", e);
      return;
    }

    const cartItems = getCart();
    const cartSummary = document.getElementById("cart-summary");
    if (cartSummary) {
      cartSummary.innerHTML = cartItems
        .map(
          (item) => `
        <div>${item.title} - $${item.price.toFixed(2)} x ${item.quantity}</div>
      `
        )
        .join("");
      const total = cartItems.reduce(
        (sum, item) => sum + item.price * item.quantity,
        0
      );
      cartSummary.innerHTML += `<div><strong>Total: $${total.toFixed(2)}</strong></div>`;
    }

    const cardButton = document.getElementById("card-button");
    if (cardButton) {
      cardButton.addEventListener("click", async () => {
        try {
          const result = await card.tokenize();
          if (result.status === "OK") {
            const response = await fetch("/api/process-payment", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                sourceId: result.token,
                cartItems,
                locationId,
              }),
            });
            const data = await response.json();
            if (data.success) {
              alert("Payment successful!");
              // Clear cart and redirect to confirmation page
            } else {
              throw new Error(data.error || "Payment failed");
            }
          }
        } catch (e) {
          console.error(e);
          alert("Payment failed. Please try again.");
        }
      });
    }
  };
</script>

<style>
  .checkout-page {
    max-width: 600px;
    margin: 0 auto;
    padding: 2rem;
  }
  #card-container {
    min-height: 90px;
  }
</style>
