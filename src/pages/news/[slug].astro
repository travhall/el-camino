---
// src/pages/news/[slug].astro
import Layout from "@/layouts/Layout.astro";
import { getPost, getPosts } from "@/lib/wordpress/api";
import { formatDate } from "@/utils/dates";
import type { WordPressPost } from "@/lib/wordpress/types";

export async function getStaticPaths() {
  const posts = await getPosts();
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

const { slug } = Astro.params;

if (!slug) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

let post: WordPressPost | null = null;
let error: string | null = null;

try {
  post = await getPost(slug);
  if (!post) {
    return new Response(null, {
      status: 404,
      statusText: "Post not found",
    });
  }
} catch (e) {
  error = e instanceof Error ? e.message : "An error occurred loading the post";
  return new Response(error, { status: 500 });
}

const category = post._embedded?.["wp:term"]?.[0]?.[0];
const featuredMedia = post._embedded?.["wp:featuredmedia"]?.[0];
const author = post._embedded?.author?.[0];

const imageUrl = featuredMedia?.source_url;

// Get the title and content from the page
const pageTitle = post.title.rendered;
const fullTitle = `${pageTitle} | El Camino`;
---

<Layout title={fullTitle}>
  <article class="p-2">
    <header class="mb-8 flex flex-col lg:flex-row-reverse items-center gap-6">
      <div class="place-self-center w-full lg:w-[50vw] p-4">
        {
          category?.name && (
            <span class="font-display text-lg text-(--content-meta) inline-block">
              {category.name}
            </span>
          )
        }

        <h1
          class="font-display font-black text-6xl lg:text-7xl xl:text-8xl 2xl:text-9xl leading-[0.8] text-(--content-heading) text-balance mb-8"
          set:html={post.title.rendered}
        />

        {
          author && (
            <div class="flex items-center gap-4 text-(--content-meta) mb-6">
              {author.avatar_urls?.["96"] && (
                <img
                  src={author.avatar_urls["96"]}
                  alt={author.name}
                  class="w-12 h-12 rounded-full"
                />
              )}
              <div>
                <span class="font-medium text-(--content-body) block">
                  {author.name}
                </span>
                <time datetime={post.date} class="text-sm">
                  {formatDate(post.date)}
                </time>
              </div>
            </div>
          )
        }
      </div>

      <div
        class="aspect-square border-4 border-(--surface-secondary) overflow-hidden bg-(--surface-secondary) relative w-full lg:w-[50vw]"
      >
        {
          imageUrl && (
            <img
              src={imageUrl}
              alt={featuredMedia?.alt_text || post.title.rendered}
              class="w-full h-auto object-cover"
            />
          )
        }
      </div>
    </header>

    <div
      class="prose prose-lg max-w-6xl mx-auto"
      set:html={post.content.rendered}
    />
  </article>
</Layout>
