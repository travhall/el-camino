---
// src/pages/news/[slug].astro
import Layout from "@/layouts/Layout.astro";
import ArticleNavigation from "@/components/ArticleNavigation.astro";
import { getArticleBySlug, getAllArticles } from "@/lib/strapi/api";
import { formatDate } from "@/utils/dates";
import type { Article } from "@/lib/types/strapi";
import MediaBlock from "@/components/blocks/MediaBlock.astro";
import QuoteBlock from "@/components/blocks/QuoteBlock.astro";
import RichTextBlock from "@/components/blocks/RichTextBlock.astro";
import SliderBlock from "@/components/blocks/SliderBlock.astro";

const { slug } = Astro.params;

if (!slug) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

let article: Article | null = null;
let articles: Article[] = [];
let error: string | null = null;

try {
  article = await getArticleBySlug(slug);
  console.log("Article Data:", JSON.stringify(article, null, 2));
  if (!article) {
    return new Response(null, {
      status: 404,
      statusText: "Article not found",
    });
  }
  articles = await getAllArticles();
} catch (e) {
  error =
    e instanceof Error ? e.message : "An error occurred loading the article";
  return new Response(error, { status: 500 });
}

function getImageUrl(path?: string): string {
  if (!path) return "";
  const baseUrl = import.meta.env.STRAPI_URL;
  return path.startsWith("http") ? path : `${baseUrl}${path}`;
}
---

<Layout>
  <section class="py-16">
    <article class="max-w-6xl mx-auto px-4">
      <header class="mb-8">
        <h1
          class="font-display font-black text-5xl lg:text-6xl xl:text-7xl 2xl:text-8xl leading-[0.8] mb-4 text-content-heading"
        >
          {article.title}
        </h1>

        <div class="flex items-center gap-4 text-content-meta mb-6">
          {
            article.author && (
              <div class="flex items-center">
                {article.author.avatar?.url && (
                  <img
                    src={getImageUrl(article.author.avatar.url)}
                    alt={article.author.name}
                    class="w-10 h-10 rounded-full mr-3"
                  />
                )}
                <div>
                  <p class="font-medium text-content-body">
                    {article.author.name}
                  </p>
                  <time datetime={article.publishedAt} class="text-sm">
                    {formatDate(article.publishedAt)}
                  </time>
                </div>
              </div>
            )
          }
        </div>

        {
          article.cover?.url && (
            <img
              src={getImageUrl(article.cover.url)}
              alt={article.cover.alternativeText || article.title}
              class="w-full h-auto rounded-sm shadow-lg mb-8"
            />
          )
        }
      </header>

      <div class="prose prose-lg max-w-none text-content-body">
        <p>{article.description}</p>
      </div>

      {
        article.blocks?.map((block) => {
          switch (block.__component) {
            case "shared.media":
              return <MediaBlock block={block} />;
            case "shared.quote":
              return <QuoteBlock block={block} />;
            case "shared.rich-text":
              return <RichTextBlock block={block} />;
            case "shared.slider":
              return <SliderBlock block={block} />;
            default:
              return null;
          }
        })
      }

      <ArticleNavigation currentSlug={article.slug} articles={articles} />
    </article>
  </section>
</Layout>
