---
// src/pages/news/index.astro
import Layout from "@/layouts/Layout.astro";
import ArticleGrid from "@/components/ArticleGrid.astro";
import { getPosts } from "@/lib/wordpress/api";
import type { WordPressPost } from "@/lib/types/wordpress";

const PAGE_SIZE = 12;
const currentPage = Number(Astro.url.searchParams.get("page")) || 1;
const sortDirection = (Astro.url.searchParams.get("sort") || "desc") as
  | "asc"
  | "desc";

let posts: WordPressPost[] = [];
let error: string | null = null;

try {
  posts = await getPosts();
} catch (e) {
  error = e instanceof Error ? e.message : "An error occurred loading posts";
}

const hasPosts = posts.length > 0;

// Sort posts based on date
if (sortDirection === "asc") {
  posts.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());
} else {
  posts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
}

// Paginate posts
const paginatedPosts = posts.slice(
  (currentPage - 1) * PAGE_SIZE,
  currentPage * PAGE_SIZE
);
---

<Layout>
  <section>
    <div class="flex flex-row justify-between w-full items-baseline p-4">
      <h2
        class="font-display font-medium text-4xl lg:text-5xl xl:text-6xl 2xl:text-7xl leading-[0.8] text-content-heading"
      >
        News
      </h2>

      <div class="flex justify-end px-4">
        <select
          class="bg-transparent border-0 px-4 py-2"
          onchange="window.location.href = this.value"
        >
          <option value="?sort=desc" selected={sortDirection === "desc"}>
            Most Recent
          </option>
          <option value="?sort=asc" selected={sortDirection === "asc"}>
            Oldest First
          </option>
        </select>
      </div>
    </div>

    <ArticleGrid posts={paginatedPosts} error={error} />

    {
      hasPosts && (
        <nav class="mt-8 flex justify-center gap-2" aria-label="Pagination">
          {currentPage > 1 && (
            <a
              href={`?page=${currentPage - 1}&sort=${sortDirection}`}
              class="px-4 py-2 text-sm border rounded-sm hover:bg-gray-50"
            >
              Previous
            </a>
          )}

          {posts.length > currentPage * PAGE_SIZE && (
            <a
              href={`?page=${currentPage + 1}&sort=${sortDirection}`}
              class="px-4 py-2 text-sm border rounded-sm hover:bg-gray-50"
            >
              Next
            </a>
          )}
        </nav>
      )
    }
  </section>
</Layout>
