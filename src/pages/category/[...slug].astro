---
// src/pages/category/[...slug].astro - PHASE 2: SERVER-SIDE PAGINATION
import ProductFilters from "@/components/ProductFilters.astro";
import FilterableProductGrid from "@/components/FilterableProductGrid.astro";
import PaginationControls from "@/components/PaginationControls.astro";
import {
  fetchCategoryHierarchy,
  fetchProductsByCategoryWithPagination,
} from "@/lib/square/categories";
import { parseURLParams } from "@/lib/square/filterUtils";
import Layout from "@/layouts/Layout.astro";

const { slug } = Astro.params;
if (!slug) return Astro.redirect("/404");

// === EXISTING CATEGORY RESOLUTION ===
const categoryHierarchy = await fetchCategoryHierarchy();
const slugParts = slug.split("/");
const topLevelSlug = slugParts[0];
const subCategorySlug = slugParts.length > 1 ? slugParts[1] : null;

const topLevelItem = categoryHierarchy.find(
  (item) => item.category.slug === topLevelSlug
);
if (!topLevelItem?.category) return Astro.redirect("/404");

let category = topLevelItem.category;
let parentCategory = null;

if (subCategorySlug) {
  const subCategory = topLevelItem.subcategories.find(
    (sub) => sub.slug === subCategorySlug
  );
  if (!subCategory) return Astro.redirect("/404");
  category = subCategory;
  parentCategory = topLevelItem.category;
}

// === NEW: PARSE URL PARAMETERS FOR PAGINATION + FILTERING ===
const urlParams = parseURLParams(Astro.url.searchParams);
const { filters, page, pageSize } = urlParams;

console.log(`[Category Page] ${category.name} - Page ${page}, Filters:`, filters);

// === ENHANCED PRODUCT FETCHING WITH PAGINATION ===
let productData;
try {
  productData = await fetchProductsByCategoryWithPagination(category.id, {
    page,
    pageSize,
    filters,
  });
} catch (error) {
  console.error("Error fetching paginated products:", error);
  // Fallback to empty state
  productData = {
    products: [],
    pagination: {
      currentPage: page,
      totalPages: 1,
      pageSize,
      totalProducts: 0,
      hasNextPage: false,
      hasPrevPage: false,
    },
    appliedFilters: filters,
    filterOptions: { brands: [] },
    hasMore: false,
  };
}

const { products, pagination, appliedFilters, filterOptions } = productData;

// Generate page metadata
const subcategories = !subCategorySlug ? topLevelItem.subcategories : [];
const pageTitle = parentCategory
  ? `${parentCategory.name} - ${category.name}`
  : category.name;

// Add pagination info to title if not on page 1
const fullPageTitle = page > 1 
  ? `${pageTitle} - Page ${page} | El Camino`
  : `Shop ${pageTitle} | El Camino`;

// Preload critical images (first 8 products)
const preloadImages = products
  .slice(0, 8)
  .map((p) => p.image)
  .filter((img) => !img.includes("placeholder"));

// Current category path for pagination URLs
const categoryPath = parentCategory 
  ? `/category/${parentCategory.slug}/${category.slug}`
  : `/category/${category.slug}`;
---

<Layout title={fullPageTitle}>
  {preloadImages.map((img) => <link rel="preload" href={img} as="image" />)}

  <!-- Responsive Grid Layout -->
  <div class="min-h-screen bg-surface-primary">

        <!-- Category Header -->
        <div class="p-4 pb-0">
          <div
            class="flex flex-col lg:flex-row justify-between gap-4 items-baseline"
          >
            <h1
              class="font-display font-black text-4xl lg:text-5xl xl:text-6xl 2xl:text-7xl leading-[0.8] text-content-heading"
            >
              {category.name}
            </h1>
            <!-- Page indicator for non-first pages -->
            {page > 1 && (
              <p class="text-content-meta text-sm mt-2">
                Page {page} of {pagination.totalPages}
              </p>
            )}
          </div>
        </div>
    <div
      class="grid grid-cols-1 lg:grid-cols-4 xl:grid-cols-5 gap-1 p-2 max-w-[120rem] mx-auto"
    >
      <!-- Filter Sidebar -->
      <aside class="lg:col-span-1">

        <!-- Subcategory Navigation (Above Products per UX research) -->
        {
          subcategories.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-1.5">
              {subcategories.map((subcategory) => (
                <a
                  href={`/category/${category.slug}/${subcategory.slug}`}
                  class="px-2.5 py-1.5 text-sm bg-ui-card-surface text-ui-card-text border border-ui-card-border rounded-sm hover:bg-ui-card-surface/75 transition-colors"
                >
                  {subcategory.name}
                </a>
              ))}
            </div>
          )
        }

        {
          parentCategory && (
            <div class="flex flex-wrap gap-2 mb-1.5">
              <a
                href={`/category/${parentCategory.slug}`}
                class="px-2.5 py-1.5 text-sm bg-ui-card-surface text-ui-card-text border border-ui-card-border rounded-sm hover:bg-ui-card-surface/75 transition-colors"
              >
                See all &ldquo;{parentCategory.name}&rdquo;
              </a>
            </div>
          )
        }
        <ProductFilters
          filterOptions={filterOptions}
          totalProducts={pagination.totalProducts}
          filteredCount={products.length}
        />
      </aside>

      <!-- Main Content -->
      <main class="lg:col-span-3 xl:col-span-4">

        <!-- Products -->
        {
          products.length > 0 ? (
            <>
              <!-- Products Grid -->
              <FilterableProductGrid
                products={products}
                paginationMode={true}
                categoryPath={categoryPath}
              />

              <!-- Pagination Controls -->
              <PaginationControls
                pagination={pagination}
                basePath={categoryPath}
                filters={appliedFilters}
                pageSize={pageSize}
              />
            </>
          ) : (
            <div class="text-center py-16">
              <div class="text-6xl mb-4 opacity-20">
                {appliedFilters.brands.length > 0 ? "üîç" : "üõπ"}
              </div>
              <h2 class="text-2xl font-display font-bold text-content-heading mb-2">
                {appliedFilters.brands.length > 0 ? "No products match your filters" : "No products found"}
              </h2>
              <p class="text-content-meta mb-6 max-w-md mx-auto">
                {appliedFilters.brands.length > 0 
                  ? "Try adjusting your filters or browse all products."
                  : subcategories.length > 0
                  ? "Try browsing our subcategories above, or check out other product categories."
                  : "This category is currently empty. Check back soon for new products!"
                }
              </p>
              {appliedFilters.brands.length > 0 ? (
                <a
                  href={categoryPath}
                  class="px-6 py-2 bg-ui-button-surface text-ui-button-text border border-ui-button-border rounded hover:bg-ui-button-hover transition-colors"
                >
                  Clear Filters
                </a>
              ) : (
                <a
                  href="/all-products"
                  class="px-6 py-2 bg-ui-button-surface text-ui-button-text border border-ui-button-border rounded hover:bg-ui-button-hover transition-colors"
                >
                  Browse All Products
                </a>
              )}
            </div>
          )
        }
      </main>
    </div>
  </div>
</Layout>