---
import ClientRouter from "astro/components/ClientRouter.astro";
import { SEOMetadata } from "astro-seo-metadata";
import { siteConfig, getStructuredData } from "@/lib/site-config";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Notification from "@/components/Notification.astro";
import "@/styles/globals.css";
// import CartDebug from "@/components/CartDebug.astro";

interface Props {
  title: string;
  structuredData?: object;
  heroImage?: string; // Add hero image for LCP optimization
}

const { title, structuredData, heroImage } = Astro.props;

// Use site config for default SEO values
const seoData = {
  ...siteConfig.seo,
};

// Get structured data from site config
const orgSchema = getStructuredData();
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>{title}</title>
    <script is:inline>
      (function () {
        const storedTheme = localStorage.getItem("theme");
        const systemPrefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches;
        const theme = storedTheme ?? (systemPrefersDark ? "dark" : "light");
        document.documentElement.classList.add(theme);
        document.documentElement.setAttribute("data-theme", theme);
      })();
    </script>
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- CRITICAL: Preload LCP hero image if provided -->
    {heroImage && (
      <>
        <link rel="preload" as="image" href={heroImage} fetchpriority="high">
        <link rel="preload" as="image" href={heroImage.replace(/\.(jpg|jpeg|png)$/i, '.webp')} fetchpriority="high" type="image/webp">
      </>
    )}

    <link
      rel="preload"
      href="/fonts/AlumniSans.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
      fetchpriority="high"
    />
    <link
      rel="preload"
      href="/fonts/AlumniSans-Italic.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />
    <link
      rel="preload"
      href="/fonts/Cabin.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
      fetchpriority="high"
    />
    <link
      rel="preload"
      href="/fonts/Cabin-Italic.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />

    <SEOMetadata
      siteName={siteConfig.name}
      title={seoData.defaultTitle}
      description={seoData.defaultDescription}
      image={seoData.defaultImage}
      favicon="/favicon.svg"
      author={siteConfig.name}
      copyright="ISC"
      astroSitemap={true}
      canonicalUrl={Astro.url.toString()}
      type="website"
      astroGenerator={true}
    />

    <script type="application/ld+json" set:html={JSON.stringify(orgSchema)} />
    {
      structuredData && (
        <script
          type="application/ld+json"
          set:html={JSON.stringify(structuredData)}
        />
      )
    }

    <script is:inline>
      {/* window.squareLoaded = false; */}
      window.addEventListener('load', () => {
        setTimeout(() => {
          window.squareLoaded = false;
          window.loadSquareScript = function() {
            if (!window.squareLoaded && !window.Square) {
              window.squareLoaded = true;
              const script = document.createElement('script');
              script.src = 'https://sandbox.web.squarecdn.com/v1/square.js';
              script.async = true;
              document.head.appendChild(script);
              return new Promise((resolve) => {
                script.onload = resolve;
              });
            }
            return Promise.resolve();
          };
        }, 100);
      });
    </script>
    <ClientRouter />
  </head>
  <body
    class="bg-surface-primary text-content-body grid grid-rows-[auto_1fr_auto] min-h-screen relative"
  >
    <Header />
    <main class="bg-surface-primary text-content-body z-0 relative">
      <slot />
    </main>
    <Footer />

    <Notification />
    <!-- <CartDebug /> -->
    <div id="portal-root"></div>
  </body>
</html>

<script>
  // Move overlays to portal container
  const portalRoot = document.getElementById("portal-root");
  if (portalRoot) {
    document
      .querySelectorAll("[data-portal-overlays]")
      .forEach((overlayGroup) => {
        const clone = overlayGroup.cloneNode(true);
        portalRoot.appendChild(clone);
        overlayGroup.remove();
      });
  }
</script>

<style is:global>
  #portal-root {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 0;
    pointer-events: none;
    z-index: 5000;
  }

  #portal-root [data-portal-overlay] {
    pointer-events: auto;
  }
</style>
