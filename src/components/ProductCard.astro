---
import Button from "@/components/Button.astro";
import type { Product } from "@/lib/types";
import { MoneyUtils } from "@/lib/square/money";

interface Props {
  product: Product;
}

const { product } = Astro.props;

// Debug log the product data
console.log("ProductCard rendering:", {
  id: product.id,
  title: product.title,
  price: MoneyUtils.fromFloat(product.price),
  hasImage: product.image !== "/images/placeholder.png",
});

const formattedPrice = MoneyUtils.format(MoneyUtils.fromFloat(product.price));
---

<div
  class="card relative flex flex-col aspect-[3_/_4] md:aspect-auto col-span-full md:col-span-2 md:row-span-5 2xl:row-span-4"
>
  <img
    src={product.image}
    alt={product.title}
    class="card-img object-cover -z-10 w-full h-full transition-all opacity-10"
    onerror="console.error('Failed to load product image:', this.src)"
  />
  <div
    class="card-content flex flex-col gap-4 lg:gap-6 px-6 py-12 xl:p-12 absolute bottom-0 w-full"
  >
    <h1 class="card-heading font-display font-black tracking-wide">
      {product.title}
    </h1>
    <span class="card-price font-display font-semibold text-base tracking-wide">
      {formattedPrice}
    </span>
    {
      product.description && (
        <p class="description text-sm leading-snug md:text-base md:leading-snug 2xl:text-lg 2xl:leading-snug">
          {product.description}
        </p>
      )
    }
    <div class="flex gap-2">
      <Button
        type="button"
        variant="primary"
        size="md"
        classes="add-to-cart-btn"
        data-product={JSON.stringify({
          id: product.id,
          catalogObjectId: product.catalogObjectId,
          variationId: product.variationId,
          title: product.title,
          price: MoneyUtils.fromFloat(product.price),
          image: product.image,
        })}
      >
        Add to Cart
      </Button>
      <Button
        type="button"
        variant="outline"
        size="md"
        classes="view-details-btn"
        onclick={`window.location.href='${product.url}'`}
      >
        View Details
      </Button>
    </div>
  </div>
</div>

<script>
  import { cart } from "@/lib/cart";
  import { MoneyUtils } from "@/lib/square/money";

  // Add to cart functionality
  document
    .querySelectorAll<HTMLButtonElement>(".add-to-cart-btn")
    .forEach((button) => {
      button.addEventListener("click", () => {
        try {
          // Get product data from button attribute
          const productData = button.dataset.product;
          if (!productData) {
            throw new Error("No product data found");
          }

          // Parse the product data
          const product = JSON.parse(productData);
          console.log("Adding to cart:", product);

          // Add to cart
          cart.addItem({
            ...product,
            quantity: 1,
          });

          // Show success message
          const successMessage = document.createElement("div");
          successMessage.className =
            "fixed top-4 right-4 bg-fig-leaf-500 dark:bg-sweet-tea-300 text-beeswax-50 dark:text-fig-leaf-900 px-4 py-2 rounded-lg shadow-lg z-50";
          successMessage.textContent = "Added to cart";
          document.body.appendChild(successMessage);

          setTimeout(() => {
            successMessage.remove();
          }, 2000);
        } catch (error) {
          console.error("Error adding to cart:", error);

          // Show error message
          const errorMessage = document.createElement("div");
          errorMessage.className =
            "fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50";
          errorMessage.textContent = "Failed to add item to cart";
          document.body.appendChild(errorMessage);

          setTimeout(() => {
            errorMessage.remove();
          }, 2000);
        }
      });
    });
</script>
