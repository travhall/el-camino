---
import Button from "@/components/Button.astro";

const {
  src = "/images/placeholder.png",
  title = "Card Title",
  pretitle = "Card Pretitle",
  description = "Use description for the body text of the Promo Card.",
  label = "Button Label",
  url = "http://www.travishall.design",
  banner = false,
} = Astro.props;
---

<div
  class:list={[
    "card relative flex flex-col aspect-[3_/_4] md:aspect-auto col-span-full md:first-of-type:col-span-4 md:col-span-2 md:row-span-5 md:first-of-type:row-span-4 2xl:row-span-4 2xl:first-of-type:row-span-3",
    banner ? "banner-card" : "promo-card",
  ]}
>
  <img
    src={src}
    alt={title}
    class:list={[
      "card-img object-cover -z-10 w-full h-full transition-all",
      banner || "opacity-10",
    ]}
  />
  <div
    class:list={[
      "card-content flex flex-col gap-4 lg:gap-6 px-6 py-12 xl:p-12 absolute bottom-0 w-full",
      !banner ||
        "bg-beeswax-200/90 dark:bg-fig-leaf-800/90 md:bg-beeswax-200 md:dark:bg-fig-leaf-800 md:border-t-4 md:border-t-beeswax-100 md:dark:border-t-fig-leaf-900 md:border-l-4 md:border-l-beeswax-100 md:dark:border-l-fig-leaf-900 md:w-2/3 right-0",
    ]}
  >
    {
      pretitle.length > 1 && (
        <span class="card-preheading font-display font-semibold text-base tracking-wide uppercase -mb-4">
          {pretitle}
        </span>
      )
    }
    {
      title.length > 1 && (
        <h1 class="card-heading font-display font-black tracking-wide text-6xl leading-[0.8] md:text-5xl md:leading-[0.8] xl:text-6xl xl:leading-[0.8] 3xl:text-7xl 3xl:leading-[0.8]">
          {title}
        </h1>
      )
    }
    {
      description.length > 1 && (
        <p class="description text-sm leading-snug md:text-base md:leading-snug 2xl:text-lg 2xl:leading-snug">
          {description}
        </p>
      )
    }
    {
      url.length > 1 && label.length > 1 && (
        <Button classes="card-btn self-start" data-url={url}>
          {label}
        </Button>
      )
    }
  </div>
</div>

<script>
  function applyHoverEffects() {
    const cardBtns = document.querySelectorAll<HTMLButtonElement>(
      ".promo-card .card-btn"
    );
    const cardImgs = document.querySelectorAll<HTMLImageElement>(
      ".promo-card .card-img"
    );

    // Remove existing event listeners
    cardBtns.forEach((cardBtn) => {
      cardBtn.removeEventListener("mouseover", handleMouseOver);
      cardBtn.removeEventListener("mouseout", handleMouseOut);
    });

    if (window.innerWidth >= 1024) {
      cardBtns.forEach((cardBtn, index) => {
        const cardImg = cardImgs[index];

        if (cardImg) {
          cardBtn.addEventListener("mouseover", handleMouseOver);
          cardBtn.addEventListener("mouseout", handleMouseOut);
        }
      });
    }
  }

  function handleMouseOver(this: HTMLButtonElement) {
    const cardImg = (
      this.closest(".promo-card") as HTMLElement
    )?.querySelector<HTMLImageElement>(".card-img");
    if (cardImg) {
      cardImg.style.opacity = "0.6";
    }
  }

  function handleMouseOut(this: HTMLButtonElement) {
    const cardImg = (
      this.closest(".promo-card") as HTMLElement
    )?.querySelector<HTMLImageElement>(".card-img");
    if (cardImg) {
      cardImg.style.opacity = "0.1";
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    applyHoverEffects();
    window.addEventListener("resize", applyHoverEffects);
  });

  const routerLinks = document.querySelectorAll<HTMLButtonElement>(".card-btn");

  routerLinks.forEach((routerLink) => {
    routerLink.addEventListener("click", () => {
      const url = routerLink.getAttribute("data-url");
      if (url) {
        window.location.href = url;
      }
    });
  });
</script>
