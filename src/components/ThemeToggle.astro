---
import { Icon } from "astro-icon/components";

const { classes, ...rest } = Astro.props;
---

<button
  class:list={["flex flex-row gap-1 items-center", classes]}
  {...rest}
  data-theme-toggle
  aria-label="Toggle theme"
>
  <span class="text-base md:text-xs font-light hidden dark:block"
    >Switch to Light Mode</span
  >
  <span class="text-base md:text-xs font-light block dark:hidden"
    >Switch to Dark Mode</span
  >
  <Icon class="block dark:hidden h-6 md:h-4 w-6 md:w-4" name="uil:moon" />
  <Icon class="hidden dark:block h-6 md:h-4 w-6 md:w-4" name="uil:sun" />
</button>

<script>
  function setupThemeToggle() {
    // Initialize theme based on localStorage or system preference
    function initializeTheme() {
      const storedTheme = localStorage.getItem("theme");
      const systemPrefersDark = window.matchMedia(
        "(prefers-color-scheme: dark)"
      ).matches;
      const theme = storedTheme ?? (systemPrefersDark ? "dark" : "light");

      document.documentElement.classList.remove("light", "dark");
      document.documentElement.classList.add(theme);
      document.documentElement.setAttribute("data-theme", theme);
    }

    // Handle theme toggle clicks
    function handleToggle() {
      const isDark = document.documentElement.classList.contains("dark");
      const newTheme = isDark ? "light" : "dark";

      document.documentElement.classList.remove("light", "dark");
      document.documentElement.classList.add(newTheme);
      document.documentElement.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);
    }

    // Setup toggle button(s)
    const toggleButtons = document.querySelectorAll("[data-theme-toggle]");
    toggleButtons.forEach((button) => {
      // Remove any existing listeners
      const newButton = button.cloneNode(true);
      button.parentNode?.replaceChild(newButton, button);

      // Add fresh click listener
      newButton.addEventListener("click", handleToggle);
    });

    // Handle system theme changes if no preference is stored
    const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
    mediaQuery.addEventListener("change", (e) => {
      if (!localStorage.getItem("theme")) {
        const newTheme = e.matches ? "dark" : "light";
        document.documentElement.classList.remove("light", "dark");
        document.documentElement.classList.add(newTheme);
        document.documentElement.setAttribute("data-theme", newTheme);
      }
    });

    // Initialize on load
    initializeTheme();
  }

  // Setup on initial load
  setupThemeToggle();

  // Re-setup after view transitions
  document.addEventListener("astro:after-swap", setupThemeToggle);
</script>
