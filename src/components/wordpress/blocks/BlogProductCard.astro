---
// src/components/wordpress/blocks/BlogProductCard.astro - Updated to match ProductCard look and feel
import type { Product } from "@/lib/square/types";
import { MoneyUtils } from "@/lib/square/money";
import { getProductStockStatus } from "@/lib/square/inventory";
import { EnhancedImageOptimizer } from "@/lib/image/enhanced-optimizer";
import {
  EL_CAMINO_LOGO_DATA_URI,
  EL_CAMINO_LOADER_DATA_URI,
} from "@/lib/constants/assets";

interface Props {
  product: Product;
  priority?: boolean;
  variant?: "compact" | "inline" | "minimal" | "list";
  index?: number;
  skipInventoryCheck?: boolean;
}

const {
  product,
  priority = false,
  variant = "compact",
  index = 0,
  skipInventoryCheck = false,
} = Astro.props;

// Stock checking (same as ProductCard)
let isOutOfStock = false;
if (!skipInventoryCheck && product) {
  const stockStatus = await getProductStockStatus(product);
  isOutOfStock = stockStatus.isOutOfStock;
}

// Format price (same as ProductCard)
const formattedPrice = MoneyUtils.format(MoneyUtils.fromFloat(product.price));

// Schema.org availability (same as ProductCard)
const availabilitySchema = isOutOfStock
  ? "https://schema.org/OutOfStock"
  : "https://schema.org/InStock";

// Generate unique IDs (same as ProductCard)
const imageId = `blog-img-${product.id}-${index}`;
const placeholderId = `blog-placeholder-${product.id}-${index}`;

// Dynamic priority (same as ProductCard)
const isDynamicPriority = priority || index < 12;

// Enhanced image optimization using EnhancedImageOptimizer
const imageSet = EnhancedImageOptimizer.generateOptimizedSources(
  product.image,
  {
    width: 600,
    height: 400,
    quality: 85,
    priority: isDynamicPriority,
  }
);

// Use best available format
const optimizedImageSrc = imageSet.avif || imageSet.webp || imageSet.jpeg;
---

<!-- LIST VARIANT -->{
  variant === "list" && (
    <a
      href={product.url}
      data-astro-prefetch="viewport"
      class={`flex gap-3 items-center p-1 bg-(--surface-primary) hover:bg-(--surface-tertiary) transition-colors duration-200 ${isOutOfStock ? "opacity-75" : ""}`}
      itemscope
      itemtype="http://schema.org/Product"
    >
      <div class="aspect-square w-48 lg:w-56 overflow-hidden bg-(--surface-secondary) rounded-xs relative">
        <img
          src={optimizedImageSrc}
          alt={product.title}
          class={`object-cover w-full h-full ${isOutOfStock ? "opacity-50" : ""}`}
          loading={isDynamicPriority ? "eager" : "lazy"}
          itemprop="image"
        />
        {isOutOfStock && (
          <div class="absolute top-0 left-0 bg-state-error-surface text-state-error-text px-2 py-1 text-xs font-bold rounded-br-sm z-10">
            Sold Out
          </div>
        )}
      </div>

      {/* Product Info */}
      <div class="grid px-1">
        <div class={`self-start ${isOutOfStock ? "opacity-50" : ""}`}>
          {product.brand && (
            <p class="text-xs uppercase text-(--content-meta)" itemprop="brand">
              {product.brand}
            </p>
          )}
          <p
            class="lg:text-2xl text-(--product-heading) font-light leading-tight line-clamp-2 mb-1"
            itemprop="name"
          >
            {product.title}
          </p>
        </div>

        <div
          class={`text-(--product-price) self-end mb-2 lg:mb-0 ${isOutOfStock ? "opacity-50" : ""}`}
        >
          <meta itemprop="availability" content={availabilitySchema} />
          <span
            class="font-display font-semibold text-3xl whitespace-nowrap"
            itemprop="offers"
            itemscope
            itemtype="http://schema.org/Offer"
          >
            <meta itemprop="price" content={product.price.toString()} />
            <meta itemprop="priceCurrency" content="USD" />
            <meta itemprop="availability" content={availabilitySchema} />
            {formattedPrice}
            {product.unit && <span class="text-lg ml-1">{product.unit}</span>}
          </span>
        </div>
      </div>
    </a>
  )
}

<!-- GRID VARIANTS (compact/inline/minimal) -->
{
  variant !== "list" && (
    <a
      href={product.url}
      data-astro-prefetch="viewport"
      class={`group grid grid-rows-[auto_1fr] gap-2 w-full h-full p-1 bg-(--ui-card-surface) hover:bg-(--ui-card-surface-hover) transition-all duration-200 ${isOutOfStock ? "opacity-75" : ""}`}
      itemscope
      itemtype="http://schema.org/Product"
    >
      {/* Product Image Container (same as ProductCard) */}
      <div class="relative aspect-square overflow-hidden">
        {/* Unified Loading Placeholder with Logo */}
        <div
          class="loading-skeleton loading-image absolute inset-0"
          id={placeholderId}
          aria-hidden="true"
        >
          {/* El Camino logo using data URI */}
          <div
            class="absolute inset-0 flex items-center justify-center"
            style={`background-image: url('${EL_CAMINO_LOADER_DATA_URI}'); background-size: auto; background-position: center; background-repeat: no-repeat; opacity: 0.7;`}
          />
        </div>

        {/* Enhanced Image (same as ProductCard) */}
        <img
          id={imageId}
          src={optimizedImageSrc}
          alt={product.title}
          class={`object-cover w-full h-full opacity-0 lg:group-hover:scale-105 transition-all duration-300 ${isOutOfStock ? "opacity-50" : ""} image-enhanced will-change-transform`}
          loading={isDynamicPriority ? "eager" : "lazy"}
          fetchpriority={isDynamicPriority ? "high" : "auto"}
          decoding={isDynamicPriority ? "sync" : "async"}
          data-placeholder-id={placeholderId}
          onerror={`this.src='${EL_CAMINO_LOGO_DATA_URI}'; this.classList.add('opacity-100', 'error'); document.getElementById('${placeholderId}')?.remove()`}
          onload={`this.classList.add('opacity-100', 'loaded'); document.getElementById('${placeholderId}')?.remove()`}
          itemprop="image"
        />

        {/* Stock status overlay (same as ProductCard) */}
        {isOutOfStock && (
          <div class="absolute top-0 left-0 bg-state-error-surface text-state-error-text px-3 py-2 text-sm font-bold rounded-sm rounded-tl-none z-10">
            Sold Out
          </div>
        )}
      </div>

      {/* Product Info */}
      <div class="grid px-1">
        <div class={`self-start ${isOutOfStock ? "opacity-50" : ""}`}>
          {product.brand && (
            <p
              class="text-xs uppercase text-(--content-meta) !mb-0"
              itemprop="brand"
            >
              {product.brand}
            </p>
          )}
          <p
            class="text-base text-(--product-heading) font-light leading-tight line-clamp-2 !mb-1"
            itemprop="name"
          >
            {product.title}
          </p>
        </div>

        <div
          class={`text-(--product-price) self-end mb-2 lg:mb-0 ${isOutOfStock ? "opacity-50" : ""}`}
        >
          <meta itemprop="availability" content={availabilitySchema} />
          <span
            class="font-display font-semibold text-3xl whitespace-nowrap"
            itemprop="offers"
            itemscope
            itemtype="http://schema.org/Offer"
          >
            <meta itemprop="price" content={product.price.toString()} />
            <meta itemprop="priceCurrency" content="USD" />
            <meta itemprop="availability" content={availabilitySchema} />
            {formattedPrice}
            {product.unit && <span class="text-lg ml-1">{product.unit}</span>}
          </span>
        </div>
      </div>
    </a>
  )
}

<style>
  .image-enhanced.error {
    filter: grayscale(100%);
  }

  @media (prefers-reduced-motion: reduce) {
    .image-enhanced {
      transition: none !important;
    }
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const images =
      document.querySelectorAll<HTMLImageElement>(".image-enhanced");

    images.forEach((img) => {
      if (img.complete && img.naturalHeight !== 0) {
        img.classList.add("opacity-100", "loaded");
        const placeholderId = img.dataset.placeholderId;
        if (placeholderId) {
          document.getElementById(placeholderId)?.remove();
        }
      }
    });
  });
</script>
