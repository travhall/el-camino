---
import { Icon } from 'astro-icon'
import type { BlogPost as BlogPostType } from '@/lib/types'

type Props = {
  post: BlogPostType
}

const { post } = Astro.props
---

<article class="max-w-4xl mx-auto">
  <header class="mb-8">
    <h1 class="text-display-xl md:text-display-2xl text-content-heading mb-4">
      {post.title}
    </h1>
    
    <div class="flex flex-wrap gap-4 text-content-meta mb-4">
      <div class="flex items-center gap-2">
        <Icon name="user" class="w-4 h-4" />
        <span>{post.author.name}</span>
      </div>
      
      <div class="flex items-center gap-2">
        <Icon name="calendar" class="w-4 h-4" />
        <time datetime={post.publishedDate}>
          {new Date(post.publishedDate).toLocaleDateString()}
        </time>
      </div>
      
      <div class="flex items-center gap-2">
        <Icon name="folder" class="w-4 h-4" />
        <a href={`/news/category/${post.category.slug}`} class="hover:underline">
          {post.category.name}
        </a>
      </div>
    </div>
    
    {post.tags && post.tags.length > 0 && (
      <div class="flex flex-wrap gap-2">
        {post.tags.map((tag) => (
          <a
            href={`/news/tag/${tag.slug}`}
            class="px-3 py-1 bg-surface-secondary text-content-meta rounded-full hover:bg-surface-tertiary transition-colors"
          >
            {tag.name}
          </a>
        ))}
      </div>
    )}
  </header>

  {post.featuredImage && (
    <figure class="mb-8">
      <img
        src={post.featuredImage.url}
        alt={post.featuredImage.altText || post.title}
        class="w-full rounded-lg"
      />
      {post.featuredImage.caption && (
        <figcaption class="mt-2 text-content-caption text-center">
          {post.featuredImage.caption}
        </figcaption>
      )}
    </figure>
  )}

  <div class="content">
    {post.layout?.map((block) => {
      switch (block.blockType) {
        case 'content':
          return (
            <div class={`content-block ${block.appearance || 'normal'}`}>
              <Fragment set:html={block.content} />
            </div>
          )
        case 'imageGallery':
          return (
            <div class={`grid grid-cols-${block.columns || '3'} gap-4 my-8`}>
              {block.images?.map((image) => (
                <figure>
                  <img
                    src={image.image.url}
                    alt={image.image.altText || ''}
                    class="w-full h-auto rounded-lg"
                  />
                  {image.caption && (
                    <figcaption class="mt-2 text-content-caption text-center">
                      {image.caption}
                    </figcaption>
                  )}
                </figure>
              ))}
            </div>
          )
        case 'video':
          return (
            <div class="my-8">
              <div class="aspect-w-16 aspect-h-9">
                <iframe
                  src={block.url}
                  frameborder="0"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowfullscreen
                  class="w-full h-full rounded-lg"
                />
              </div>
              {block.caption && (
                <p class="mt-2 text-content-caption text-center">
                  {block.caption}
                </p>
              )}
              {block.transcript && (
                <details class="mt-4">
                  <summary class="cursor-pointer text-content-meta">View Transcript</summary>
                  <div class="mt-2 p-4 bg-surface-secondary rounded-lg">
                    {block.transcript}
                  </div>
                </details>
              )}
            </div>
          )
        default:
          return null
      }
    })}
  </div>
</article>