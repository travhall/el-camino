---
// src/components/blocks/SliderBlock.astro
import type { DynamicZoneComponent, StrapiMedia } from "@/lib/types/strapi";
import Overlay from "../Overlay.astro";

type Props = {
  block: Extract<DynamicZoneComponent, { __component: "shared.slider" }>;
};

interface ImageData {
  src: string;
  alt: string;
  width: number;
  height: number;
  fullSize: {
    src: string;
    width: number;
    height: number;
  };
  caption?: string;
}

const { block } = Astro.props;
const baseUrl = import.meta.env.STRAPI_URL || "";

const images: ImageData[] = block.files.map((file: StrapiMedia) => {
  const thumbnailData = file.formats?.medium || file;
  const fullSizeData = file.formats?.large || file;

  const thumbnailUrl = thumbnailData.url.startsWith("http")
    ? thumbnailData.url
    : `${baseUrl}${thumbnailData.url}`;

  const fullSizeUrl = fullSizeData.url.startsWith("http")
    ? fullSizeData.url
    : `${baseUrl}${fullSizeData.url}`;

  return {
    src: thumbnailUrl,
    alt: file.alternativeText || file.name || "",
    width: thumbnailData.width,
    height: thumbnailData.height,
    fullSize: {
      src: fullSizeUrl,
      width: fullSizeData.width,
      height: fullSizeData.height,
    },
    caption: file.caption,
  } as ImageData;
});
---

<div class="my-8">
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
    {
      images.map((img, i) => (
        <>
          <figure class="group relative overflow-hidden rounded-sm cursor-pointer">
            <div
              class="aspect-square overflow-hidden"
              onclick={`
                document.getElementById('overlay-${i}').classList.remove('hidden');
                document.body.style.overflow = 'hidden';
              `}
            >
              <img
                src={img.src}
                alt={img.alt}
                width={img.width}
                height={img.height}
                loading="lazy"
                class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
              />
            </div>
            {img.caption && (
              <figcaption class="mt-2 text-sm text-content-meta text-center">
                {img.caption}
              </figcaption>
            )}
          </figure>
        </>
      ))
    }
  </div>
</div>

{/* Overlays Container */}
<div data-portal-overlays>
  {
    images.map((img, i) => (
      <Overlay
        id={`overlay-${i}`}
        imgSrc={img.fullSize.src}
        imgAlt={img.alt}
        imgWidth={img.fullSize.width}
        imgHeight={img.fullSize.height}
        caption={img.caption}
      />
    ))
  }
</div>

<style>
  img {
    @apply opacity-0 animate-[fade-in_0.5s_ease-in-out_forwards];
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  [id^="overlay-"] {
    @apply transition-opacity duration-300;
  }

  [id^="overlay-"].hidden {
    @apply opacity-0 pointer-events-none;
  }
</style>

<script>
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      document.querySelectorAll('[id^="overlay-"]').forEach((overlay) => {
        overlay.classList.add("hidden");
        document.body.style.overflow = "auto";
      });
    }
  });
</script>
