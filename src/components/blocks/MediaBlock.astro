---
// src/components/blocks/MediaBlock.astro
import type { DynamicZoneComponent, StrapiMedia } from '@/lib/types/strapi';

type Props = {
  block: Extract<DynamicZoneComponent, { __component: 'shared.media' }>;
};

const { block } = Astro.props;
const baseUrl = import.meta.env.STRAPI_URL || '';

if (!block.file || !block.file.url) return null;

// Use medium format if available, otherwise use original
const imageData = block.file.formats?.medium || block.file;
const url = imageData.url.startsWith('http')
  ? imageData.url
  : `${baseUrl}${imageData.url}`;

const imageProps = {
  src: url,
  alt: block.file.alternativeText || block.file.name || '',
  width: imageData.width,
  height: imageData.height,
  loading: "lazy" as const,
};
---
<figure class="my-8">
  <div class="relative aspect-video overflow-hidden rounded-sm">
    <img 
      {...imageProps}
      class="w-full h-full object-cover object-center transition-transform duration-300 hover:scale-105"
    />
  </div>
  {block.file.caption && (
    <figcaption class="mt-2 text-sm text-content-meta text-center">
      {block.file.caption}
    </figcaption>
  )}
</figure>

<style>
  img {
    @apply opacity-0 animate-[fade-in_0.5s_ease-in-out_forwards];
  }
  
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
</style>