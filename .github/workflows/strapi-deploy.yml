name: Deploy Strapi

on:
  push:
    branches: [master]
    paths:
      - "api/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    defaults:
      run:
        working-directory: ./api

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./api/package.json"

      - name: Install dependencies
        run: npm install

      # Create production config directory and file
      - name: Create production config
        run: |
          mkdir -p config/env/production
          cat > config/env/production/server.ts << EOL
          export default ({ env }) => ({
            host: env('HOST', '0.0.0.0'),
            port: env.int('PORT', 1337),
            url: 'https://travhall.github.io',
            prefix: '/el-camino/api',
            app: {
              keys: env.array('APP_KEYS'),
            },
            admin: {
              path: '/admin',
              build: {
                backend: 'https://travhall.github.io/el-camino/api'
              }
            }
          });
          EOL

      - name: Create static config
        run: |
          cat > config/env/production/static.ts << EOL
          export default {
            enabled: true,
            maxAge: 31536000,
            defaultIndex: true
          };
          EOL

      - name: Build Strapi
        run: npm run build
        env:
          NODE_ENV: production
          HOST: "0.0.0.0"
          PORT: 1337
          APP_KEYS: ${{ secrets.STRAPI_APP_KEYS }}
          API_TOKEN_SALT: ${{ secrets.STRAPI_API_TOKEN_SALT }}
          ADMIN_JWT_SECRET: ${{ secrets.STRAPI_ADMIN_JWT_SECRET }}
          JWT_SECRET: ${{ secrets.STRAPI_JWT_SECRET }}
          TRANSFER_TOKEN_SALT: ${{ secrets.STRAPI_TRANSFER_TOKEN_SALT }}
          DATABASE_CLIENT: "sqlite"
          DATABASE_FILENAME: ".tmp/data.db"
          PUBLIC_URL: "https://travhall.github.io/el-camino/api"

      # Debug step to check build output
      - name: Debug Build Output
        run: |
          echo "Checking build directory structure:"
          ls -la build/
          echo "Checking for index file:"
          ls -la build/index.html || echo "No index.html found"
          echo "Checking admin directory:"
          ls -la build/admin || echo "No admin directory found"

      # Create a 404.html that redirects to index.html
      - name: Create 404 Page
        run: |
          cat > build/404.html << EOL
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>Redirecting...</title>
              <script type="text/javascript">
                // Single Page Apps for GitHub Pages
                // https://github.com/rafgraph/spa-github-pages
                (function(l) {
                  if (l.search[1] === '/' ) {
                    var decoded = l.search.slice(1).split('&').map(function(s) { 
                      return s.replace(/~and~/g, '&')
                    }).join('?');
                    window.history.replaceState(null, null,
                        l.pathname.slice(0, -1) + decoded + l.hash
                    );
                  }
                }(window.location))
              </script>
            </head>
            <body>
              Redirecting...
            </body>
          </html>
          EOL

      # Create an index.html if it doesn't exist
      - name: Create Index Page
        run: |
          if [ ! -f build/index.html ]; then
            cat > build/index.html << EOL
            <!DOCTYPE html>
            <html>
              <head>
                <meta charset="utf-8">
                <title>El Camino API</title>
                <meta http-equiv="refresh" content="0;url=/el-camino/api/admin">
              </head>
              <body>
                Redirecting to admin panel...
              </body>
            </html>
            EOL
          fi

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: api/build
          branch: gh-pages
          clean: true
