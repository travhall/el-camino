name: Deploy Strapi

on:
  push:
    branches: [master]
    paths:
      - "api/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    defaults:
      run:
        working-directory: ./api

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./api/package.json"

      - name: Install dependencies
        run: npm install

      # Debug step to check directory structure before build
      - name: Debug Pre-Build
        run: |
          echo "Current directory structure:"
          pwd
          ls -la
          echo "Config directory:"
          ls -la config/ || echo "No config directory found"

      # Create production config directory and file
      - name: Create production config
        run: |
          mkdir -p config/env/production
          cat > config/env/production/server.ts << EOL
          export default ({ env }) => ({
            host: env('HOST', '0.0.0.0'),
            port: env.int('PORT', 1337),
            url: 'https://travhall.github.io',
            prefix: '/el-camino/api',
            app: {
              keys: env.array('APP_KEYS'),
            },
          });
          EOL

      # Debug step to check config creation
      - name: Debug Config
        run: |
          echo "Checking production config:"
          ls -la config/env/production/
          cat config/env/production/server.ts

      - name: Build Strapi
        run: |
          echo "Starting build process..."
          npm run build
          echo "Build process completed"
          echo "Checking directory structure after build:"
          ls -la
          echo "Checking possible build directories:"
          ls -la dist/ || echo "No dist/ directory"
          ls -la .next/ || echo "No .next/ directory"
          ls -la build/ || echo "No build/ directory"
        env:
          NODE_ENV: production
          HOST: "0.0.0.0"
          PORT: 1337
          APP_KEYS: ${{ secrets.STRAPI_APP_KEYS }}
          API_TOKEN_SALT: ${{ secrets.STRAPI_API_TOKEN_SALT }}
          ADMIN_JWT_SECRET: ${{ secrets.STRAPI_ADMIN_JWT_SECRET }}
          JWT_SECRET: ${{ secrets.STRAPI_JWT_SECRET }}
          TRANSFER_TOKEN_SALT: ${{ secrets.STRAPI_TRANSFER_TOKEN_SALT }}
          DATABASE_CLIENT: "sqlite"
          DATABASE_FILENAME: ".tmp/data.db"
          PUBLIC_URL: "https://travhall.github.io/el-camino/api"

      # Additional debug step to check Strapi specific directories
      - name: Debug Strapi Directories
        run: |
          echo "Checking .strapi directory:"
          ls -la .strapi/ || echo "No .strapi directory"
          echo "Checking src directory:"
          ls -la src/ || echo "No src directory"
          echo "Checking public directory:"
          ls -la public/ || echo "No public directory"

      # If we find the build directory, create necessary files
      - name: Prepare Deployment
        run: |
          BUILD_DIR=""
          if [ -d "dist" ]; then
            BUILD_DIR="dist"
          elif [ -d "build" ]; then
            BUILD_DIR="build"
          elif [ -d ".strapi/build" ]; then
            BUILD_DIR=".strapi/build"
          else
            echo "No build directory found"
            exit 1
          fi

          echo "Found build directory: $BUILD_DIR"

          # Create index.html in the correct directory
          cat > $BUILD_DIR/index.html << EOL
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>El Camino API</title>
              <meta http-equiv="refresh" content="0;url=/el-camino/api/admin">
            </head>
            <body>
              Redirecting to admin panel...
            </body>
          </html>
          EOL

      # Deploy the correct directory
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: api/dist # We'll update this based on what we find
          branch: gh-pages
          clean: true
